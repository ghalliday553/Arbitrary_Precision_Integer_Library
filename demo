#!/usr/bin/env python

import subprocess
import os

initialDir = os.path.dirname(os.path.abspath(__file__))
cmd = os.path.join(initialDir, "ap_calculator");

# Due to limitations for communicate(), a new subprocess must be created for each input
def runComp(comp, expected):
	proc = subprocess.Popen([cmd], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
	ret = proc.communicate(input=bytes(comp + "\n"))
	answer = str(ret[0].decode('utf-8'))
	print(comp + " -> " + answer)
	if (answer != (expected + "\n")):
		print("FAILED TEST")
		exit()

print("---------------------------")
print("Arbitrary-Precision Calculator Demo")
print("---------------------------")
print("\n")

print("----------")
print("Addition")
print("----------")

print("\nsanity:\n")
runComp("1 1 +", "2")
runComp("1 -1 +", "0")
runComp("-1 1 +", "0")
runComp("-1 -1 +", "-2")

print("\nmulti:\n")
runComp("1 1 + 1 +", "3")
runComp("1 1 + -1 +", "1")

print("\nunary:\n")
runComp("1 ++", "2")
runComp("1 1 + ++", "3")

print("\nlarge:\n")
runComp("18446744073709551615 18446744073709551615 +", "36893488147419103230")
runComp("-18446744073709551615 -18446744073709551615 +", "-36893488147419103230")

print("\n----------")
print("Subtraction")
print("----------")

print("\nsanity:\n")
runComp("1 1 -", "0")
runComp("1 -1 -", "2")
runComp("-1 1 -", "-2")
runComp("-1 -1 -", "0")

print("\nmulti:\n")
runComp("1 1 - 1 -", "-1")
runComp("1 1 - -1 -", "1")

print("\nunary:\n")
runComp("1 --", "0")
runComp("1 1 - --", "-1")

print("\nlarge:\n")
runComp("18446744073709551615 18446744073709551615 -", "0")
runComp("-18446744073709551615 -18446744073709551615 -", "0")
runComp("18446744073709551615 -18446744073709551615 -", "36893488147419103230")
runComp("-18446744073709551615 18446744073709551615 -", "-36893488147419103230")

print("\n----------")
print("Multiplication")
print("----------")

print("\nsanity:\n")
runComp("1 2 *", "2")
runComp("1 -2 *", "-2")
runComp("-1 2 *", "-2")
runComp("-1 -2 *", "2")

print("\nmulti:\n")
runComp("1 2 * 1 *", "2")
runComp("1 2 * -1 *", "-2")

print("\nlarge:\n")
runComp("18446744073709551615 18446744073709551615 *", "340282366920938463426481119284349108225")
runComp("-18446744073709551615 -18446744073709551615 *", "340282366920938463426481119284349108225")
runComp("18446744073709551615 -18446744073709551615 *", "-340282366920938463426481119284349108225")
runComp("-18446744073709551615 18446744073709551615 *", "-340282366920938463426481119284349108225")

print("\n----------")
print("Division")
print("----------")

print("\nsanity:\n")
runComp("10 2 /", "5")
runComp("10 -2 /", "-5")
runComp("-10 2 /", "-5")
runComp("-10 -2 /", "5")
runComp("10 3 /", "3")
runComp("10 -3 /", "-3")
runComp("-10 3 /", "-3")
runComp("-10 -3 /", "3")

print("\ndivision by 0:\n")
runComp("10 0 /", "0")

print("\nmulti:\n")
runComp("10 2 / 2 /", "2")
runComp("10 2 / -2 /", "-2")

print("\nlarge:\n")
runComp("340282366920938463426481119284349108225 5 /", "68056473384187692685296223856869821645")
runComp("-340282366920938463426481119284349108225 -5 /", "68056473384187692685296223856869821645")
runComp("340282366920938463426481119284349108225 -5 /", "-68056473384187692685296223856869821645")
runComp("-340282366920938463426481119284349108225 5 /", "-68056473384187692685296223856869821645")

print("\n----------")
print("Modulus")
print("----------")

print("\nsanity:\n")
runComp("10 2 %", "0")
runComp("10 -2 %", "0")
runComp("-10 2 %", "0")
runComp("-10 -2 %", "0")
runComp("10 3 %", "1")
runComp("10 -3 %", "1")
runComp("-10 3 %", "-1")
runComp("-10 -3 %", "-1")

print("\nmod division by 0:\n")
runComp("10 0 %", "10")

print("\nmulti:\n")
runComp("10 3 % 2 %", "1")
runComp("10 3 % -2 %", "1")

print("\nlarge:\n")
runComp("340282366920938463426481119284349108225 6 %", "3")
runComp("-340282366920938463426481119284349108225 -6 %", "-3")
runComp("340282366920938463426481119284349108225 -6 %", "3")
runComp("-340282366920938463426481119284349108225 6 %", "-3")

print("\n----------")
print("Exponentiation")
print("----------")

print("\nsanity:\n")
runComp("2 3 ^", "8")
runComp("-2 3 ^", "-8")
runComp("2 -3 ^", "0")
runComp("2 0 ^", "1")

print("\nmulti:\n")
runComp("2 3 ^ 2 ^", "64")

print("\nlarge:\n")
runComp("18446744073709551615 3 ^", "6277101735386680762814942322444851025767571854389858533375")
runComp("-18446744073709551615 3 ^", "-6277101735386680762814942322444851025767571854389858533375")

print("\n----------")
print("Comparisions")
print("----------")

print("\nless-than:\n")
runComp("2 3 <", "1")
runComp("-2 3 <", "1")
runComp("2 -3 <", "0")
runComp("-2 -3 <", "0")

print("\ngreater-than:\n")
runComp("2 3 >", "0")
runComp("-2 3 >", "0")
runComp("2 -3 >", "1")
runComp("-2 -3 >", "1")

print("\nequal-to:\n")
runComp("2 2 ==", "1")
runComp("-2 2 ==", "0")
runComp("2 2 <=", "1")
runComp("2 2 >=", "1")
runComp("2 2 !=", "0")
runComp("-2 2 !=", "1")

print("\n----------")
print("Shift Operations")
print("----------")

print("\nshift-right:\n")
runComp("16 2 >>", "4")
runComp("16 5 >>", "0")
runComp("-16 2 >>", "-4")
runComp("-17 2 >>", "-5")

print("\nshift-left:\n")
runComp("2 4 <<", "32")
runComp("2 128 <<", "680564733841876926926749214863536422912")
runComp("-2 2 <<", "-8")


print("\n----------")
print("Logical Operations")
print("----------")

print("\nAND:\n")
runComp("1 1 &&", "1")
runComp("1 0 &&", "0")

print("\nOR:\n")
runComp("1 1 ||", "1")
runComp("1 0 ||", "1")
runComp("0 0 ||", "0")

print("\nNOT:\n")
runComp("1 !", "0")
runComp("0 !", "1")

print("\n----------")
print("Bitwise Operations")
print("----------")

print("\nAND:\n")
runComp("2 2 &", "2")
runComp("-2 2 &", "-2")
runComp("2 -2 &", "2")
runComp("2 1 &", "0")
runComp("-2 1 &", "0")
runComp("2 -1 &", "0")

print("\nOR:\n")
runComp("2 1 |", "3")
runComp("-2 1 |", "-3")
runComp("2 -1 |", "3")

print("\nNOT:\n")
runComp("1 ~", "254")
runComp("-1 ~", "-254")
runComp("255 ~", "0")
runComp("-255 ~", "0")

print("\n----------")
print("Error Handling")
print("----------")

print("\nincorrect number of operands:\n")
runComp("1 +", "INVALID OPERATION")
runComp("1 1 1+", "INVALID OPERATION")
runComp("1 1 + 1 1 +", "INVALID OPERATION")
runComp("1 1 ++", "INVALID OPERATION")
runComp("++", "INVALID OPERATION")

print("\ninvalid operand:\n")
runComp("a 1 +", "INVALID OPERATION")
runComp("1a 1 +", "INVALID OPERATION")
runComp("-a 1 +", "INVALID OPERATION")
runComp("-1a 1 +", "INVALID OPERATION")
runComp("1 1 + a +", "INVALID OPERATION")
runComp("1 1 + 1a +", "INVALID OPERATION")
runComp("1 1 + -a +", "INVALID OPERATION")
runComp("1 1 + -1a +", "INVALID OPERATION")

print("\ninvalid operator:\n")
runComp("1 1 $", "INVALID OPERATION")
runComp("1 1 +++", "INVALID OPERATION")
runComp("1 1 + 1 $", "INVALID OPERATION")
runComp("1 1 + 1 +++", "INVALID OPERATION")

print("\nsanitization:\n")
runComp("0001 1 +", "2")


print("\n")
print("---------------------------")
print("Arbitrary-Precision Calculator Demo Completed")
print("---------------------------")

